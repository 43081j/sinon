version: 2
jobs:
  build-common: &common-build
    docker:
      - image: node
    working_directory: ~/sinon
    steps:
      - run:
          name: Versions
          command: |
            npm version
      - checkout
      - restore_cache:
          keys:
            - v1-npm-{{ .Branch }}-{{ checksum "package.json" }}
            - v1-npm-master-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: |
              npm config set strict-ssl false
              # puppeteer install script throws syntax errors for Node v4
              # https://github.com/GoogleChrome/puppeteer/blob/f19e2ade0d4859435422131905e932abe3db199c/install.js#L66
              if node --version | grep -q '^v4'; then
                npm config set ignore-scripts true
                npm install
                npm config set ignore-scripts false
              else
                npm install
              fi

              if node --version | grep -q '^v6'; then
                wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
                echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list
                apt-get update
                apt-get install -y --no-install-recommends google-chrome-unstable
              fi
      - run:
          name: Pre-Test
          # ESLint only supports Node >=4
          command: |
              if node --version | grep -q '^v6'; then
                npm run lint;
                # modify mochify to pass additional params to chrome
                sed -i "s#'--allow-insecure-localhost'#'--allow-insecure-localhost', '--no-sandbox', '--disable-setuid-sandbox'#" node_modules/mochify/lib/chromium.js && echo "modified mochify/lib/chromium.js";
                npm run test-headless -- --chrome $(which google-chrome-unstable);
                npm run test-webworker -- --chrome $(which google-chrome-unstable);
              fi
      - run:
          name: Test
          command: npm run test-node
      - save_cache:
          key: v1-npm-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules

  node-4:
    <<: *common-build
    docker:
      - image: node:4
    environment:
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

  node-6:
    <<: *common-build
    docker:
      - image: node:6

  node-8:
    <<: *common-build
    docker:
      - image: node:8
    environment:
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

workflows:
  version: 2
  build:
    jobs:
      - node-4
      - node-6
      - node-8
